@using SkillBuilder.Models.ViewModels
@model AdminProfileViewModel

@{
    var showArchived = false;
    if (ViewBag.ShowArchived != null)
        showArchived = (bool)ViewBag.ShowArchived;

    // Only learners (not Artisan or Admin)
    var existingUsers = Model.AllUsers
        .Where(u => !u.IsArchived && u.Role == "Learner")
    .ToList();

    var archivedUsers = Model.AllUsers
        .Where(u => u.IsArchived && u.Role == "Learner")
        .ToList();
}


<style>
    /* Section */
    .user-mgmt-user-section {
        padding: 2rem;
    }

    .user-mgmt-user-header {
        font-size: 1.8rem;
        font-weight: bold;
        margin-bottom: 1.5rem;
        color: #344AEA;
    }

    .user-mgmt-user-controls {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
    }

    /* Filter button */
    .user-mgmt-filter-btn {
        flex: 0 0 10%;
        background-color: #eee;
        border: none;
        padding: 0.6rem 1rem;
        border-radius: 8px;
        cursor: pointer;
        font-weight: bold;
    }

    /* Table */
    .user-mgmt-user-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 1.2rem;
    }

        .user-mgmt-user-table th {
            text-align: left;
            font-size: 1rem;
            color: #666;
            padding: 0.5rem 1rem;
        }

    .user-mgmt-user-row {
        background-color: #f9f9f9;
        border-radius: 10px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.05);
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .user-mgmt-user-row:hover {
            background-color: #e6e6e6;
            transform: scale(1.01);
        }

    .user-mgmt-user-cell {
        padding: 1rem;
        vertical-align: middle;
    }

    .user-mgmt-user-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

        .user-mgmt-user-info img {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 50%;
        }

    .user-mgmt-user-details {
        display: flex;
        flex-direction: column;
    }

    .user-mgmt-user-name {
        font-weight: bold;
        font-size: 1rem;
        color: #333;
    }

    .user-mgmt-user-email {
        font-size: 0.85rem;
        color: #777;
    }

    .user-mgmt-user-role {
        font-weight: 600;
        font-size: 1rem;
        color: #222;
        text-align: center;
    }

    .user-mgmt-action-buttons {
        display: flex;
        gap: 0.5rem;
        justify-content: flex-end;
        align-items: center;
    }

        .user-mgmt-action-buttons button {
            background-color: #FEE4E2;
            color: #B42318;
            padding: 0.8rem 0.8rem;
            border: solid #B42318 1px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: bold;
            max-width: 110px;
            min-width: 110px;
        }

    .user-mgmt-delete-btn {
        background-color: #e74c3c;
    }

        .user-mgmt-delete-btn:hover {
            background-color: #c0392b;
            color: white;
        }

    .user-mgmt-deactivate-btn {
        background-color: #e74c3c;
    }

        .user-mgmt-deactivate-btn:hover {
            background-color: #c0392b;
            color: white;
        }

    .user-mgmt-reactivate-btn {
        background-color: #A5D6A7 !important;
        color: #4CAF50 !important;
    }

        .user-mgmt-reactivate-btn:hover {
            background-color: #3d8e41 !important;
            color: white !important;
        }

    /* Backdrop */
    .user-mgmt-admin-modal-backdrop {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        z-index: 1000;
    }

    /* Modal box */
    .user-mgmt-admin-modal {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: #fff;
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        z-index: 1001;
        max-width: 400px;
        width: 90%;
        text-align: center;
    }

        .user-mgmt-admin-modal h3 {
            margin-bottom: 1rem;
            font-size: 1.3rem;
            font-weight: bold;
            color: #333;
        }

        .user-mgmt-admin-modal p {
            margin-bottom: 1.5rem;
            font-size: 1rem;
            color: #555;
        }

    .user-mgmt-admin-modal-buttons {
        display: flex;
        justify-content: center;
        gap: 1rem;
    }

        .user-mgmt-admin-modal-buttons button {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: bold;
        }

    .user-mgmt-admin-modal-confirm {
        background-color: #e74c3c;
        color: #fff;
    }

        .user-mgmt-admin-modal-confirm:disabled {
            background-color: #ccc;
            cursor: not-allowed;
            opacity: 0.6;
            transform: none !important;
        }

        .user-mgmt-admin-modal-confirm:not(:disabled):hover {
            transform: scale(1.05);
            background-color: #c0392b;
        }

    .user-mgmt-admin-modal-cancel {
        background-color: #ccc;
        color: #333;
    }

    .user-mgmt-admin-modal-ok {
        background-color: #4CAF50;
        color: white;
    }

    .user-mgmt-admin-action-btn {
        padding: 0.6rem 1.2rem;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 0.9rem;
        font-weight: bold;
        color: white;
        transition: background-color 0.2s ease;
    }

    .user-mgmt-search-bar-wrapper {
        display: flex;
        width: 100%;
        border: 1px solid #ccc;
        border-radius: 8px;
        overflow: hidden;
    }

        .user-mgmt-search-bar-wrapper input {
            flex: 1;
            padding: 0.6rem 1rem;
            border: none;
            outline: none;
            font-size: 1rem;
            cursor: text;
        }

        .user-mgmt-search-bar-wrapper button {
            flex: 0 0 auto;
            background-color: #344AEA;
            border: none;
            padding: 0.6rem 1rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .user-mgmt-search-bar-wrapper button img {
                width: 1.2rem;
                height: 1.2rem;
            }

    .archived-user-greyed {
        opacity: 0.5;
    }

    .user-mgmt-user-tabs {
        display: flex;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .user-mgmt-user-tab {
        padding: 0.75rem 1.5rem;
        background-color: transparent;
        border: none;
        border-bottom: 3px solid transparent;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .user-mgmt-user-tab.active {
            border-bottom-color: #344AEA;
            color: #344AEA;
        }

        .user-mgmt-user-tab:hover {
            color: #344AEA;
        }
 </style>

<div class="user-mgmt-user-section">
    <div class="user-mgmt-user-header">All Users</div>

    <div class="user-mgmt-user-controls">
        <div class="user-mgmt-search-bar-wrapper">
            <input type="text" id="userSearchInput" placeholder="Search by name or email..." />
            <button type="button" id="userSearchButton">
                <img src="/assets/Icons/Search.ico" alt="Search" />
            </button>
        </div>
    </div>

    <div class="user-mgmt-user-tabs">
        <button class="user-mgmt-user-tab active" data-tab="existing">Existing</button>
        <!-- <button class="user-mgmt-user-tab" data-tab="archived">Deleted</button> -->
    </div>

    <table class="user-mgmt-user-table">
            <colgroup>
                <col style="width: 33%;">
                <col style="width: 33%; text-align:center;">
                <col style="width: 33%; text-align:right;">
            </colgroup>
        <thead>
            <tr>
                <th>Name</th>
                <th style="text-align: center;">User Type</th>
                <th style="text-align: right;">Actions</th>
            </tr>
        </thead>
            <tbody>
                @* Existing users *@
                @foreach (var user in existingUsers)
                {
                    <tr class="user-mgmt-user-row" data-tab="existing">
                        <td class="user-mgmt-user-cell">
                            <div class="user-mgmt-user-info">
                                <img src="@user.UserAvatar" alt="Avatar" />
                                <div class="user-mgmt-user-details">
                                    <div class="user-mgmt-user-name">
                                        <a asp-controller="AdminProfile" asp-action="UserProfileByAdmin" asp-route-id="@user.Id" style="text-decoration: none;">
                                            @user.FirstName @user.LastName
                                        </a>
                                    </div>
                                    <div class="user-mgmt-user-email">@user.Email</div>
                                </div>
                            </div>
                        </td>

                        <td class="user-mgmt-user-cell user-mgmt-user-role">
                            @user.Role
                        </td>

                        <td class="user-mgmt-user-cell">
                            <div class="user-mgmt-action-buttons">
                                <!-- Delete button -->
                                <form asp-action="DeleteUser" asp-route-id="@user.Id" asp-route-adminId="@Model.Admin.UserId" method="post"
                                      onsubmit="return adminOpenDeleteModal(this);">
                                    <button type="submit" class="user-mgmt-admin-action-btn user-mgmt-delete-btn">
                                        Delete User
                                    </button>
                                </form>

                                <!-- Toggle Deactivation button -->
                                <form asp-action="ToggleUserStatus" asp-route-id="@user.Id" asp-route-adminId="@Model.Admin.UserId" method="post"
                                      onsubmit="return adminOpenToggleModal(this, '@(user.IsDeactivated ? "Reactivate" : "Deactivate")');">
                                    @if (user.IsDeactivated)
                                    {
                                        <button type="submit" class="user-mgmt-admin-action-btn user-mgmt-reactivate-btn">Reactivate</button>
                                    }
                                    else
                                    {
                                        <button type="submit" class="user-mgmt-admin-action-btn user-mgmt-deactivate-btn">Deactivate</button>
                                    }
                                </form>
                            </div>
                        </td>
                    </tr>
                }

                @* Archived users *@
                @if (archivedUsers.Any())
                {
                    <!-- Archived users -->
                    @foreach (var user in archivedUsers)
                    {
                        <tr class="user-mgmt-user-row" data-tab="archived" style="display:none;">
                            <td class="user-mgmt-user-cell">
                                <div class="user-mgmt-user-info archived-user-greyed">
                                    <img src="@user.UserAvatar" alt="Avatar" />
                                    <div class="user-mgmt-user-details">
                                        <div class="user-mgmt-user-name">
                                            <a asp-controller="AdminProfile" asp-action="UserProfileByAdmin" asp-route-id="@user.Id" style="text-decoration: none;">
                                                @user.FirstName @user.LastName
                                            </a>
                                        </div>
                                        <div class="user-mgmt-user-email">@user.Email</div>
                                    </div>
                                </div>
                            </td>

                            <td class="user-mgmt-user-cell user-mgmt-user-role archived-user-greyed">
                                @user.Role
                            </td>

                            <td class="user-mgmt-user-cell archived-user-greyedl">
                                <div class="user-mgmt-action-buttons">
                                    Deleted
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr class="user-mgmt-user-row" data-tab="archived" style="display:none;">
                        <td colspan="3" class="user-mgmt-user-cell" style="text-align:center; font-style:italic; color:#777;">
                            No deleted users yet.
                        </td>
                    </tr>
                }

                <tr id="noUsersMessage" style="display:none;">
                    <td colspan="3" class="user-mgmt-user-cell" style="text-align:center; font-style:italic; color:#777;">
                        No users found.
                    </td>
                </tr>
            </tbody>
    </table>

    <!-- Backdrop -->
    <div class="user-mgmt-admin-modal-backdrop" id="adminModalBackdrop"></div>

    <!-- Delete confirmation modal -->
    <div class="user-mgmt-admin-modal" id="adminDeleteModal">
        <h3>Confirm Deletion</h3>
        <p>Are you sure you want to delete this user?</p>
        <div class="user-mgmt-admin-modal-buttons">
            <button class="user-mgmt-admin-modal-cancel" onclick="adminCloseModal()">Cancel</button>
            <button class="user-mgmt-admin-modal-confirm" id="adminConfirmDelete">Delete</button>
        </div>
    </div>

    <!-- Status toggle confirmation modal -->
    <div class="user-mgmt-admin-modal" id="adminToggleModal">
        <h3>Confirm Action</h3>
        <p id="adminToggleMessage"></p>
        <textarea id="adminToggleReason" placeholder="Enter reason (optional)"
                  style="width:100%; min-height:80px; margin-bottom:1rem; padding:0.5rem; border-radius:6px; border:1px solid #ccc; resize: none;"></textarea>
        <div class="user-mgmt-admin-modal-buttons">
            <button class="user-mgmt-admin-modal-cancel" onclick="adminCloseModal()">Cancel</button>
            <button class="user-mgmt-admin-modal-confirm" id="adminConfirmToggle">Yes</button>
        </div>
    </div>


</div>

<script>

    const searchInput = document.getElementById("userSearchInput");
    const searchButton = document.getElementById("userSearchButton");

    function filterUsers() {
        const filter = searchInput.value.toLowerCase().trim();
        const rows = document.querySelectorAll(".user-mgmt-user-row");
        const activeTab = document.querySelector(".user-mgmt-user-tab.active").dataset.tab;

        let anyVisible = false;

        rows.forEach(row => {
            // Ignore rows not in active tab
            if (row.dataset.tab !== activeTab) {
                row.style.display = "none";
                return;
            }

            // Skip the "No users found" message
            if (row.id === "noUsersMessage") return;

            // Skip empty rows ("No deleted users yet")
            const isEmptyRow = row.querySelector(".user-mgmt-user-cell")?.innerText.includes("No");
            if (isEmptyRow) {
                // Show only if no filter is applied
                row.style.display = !filter ? "table-row" : "none";
                return;
            }

            const nameCell = row.querySelector(".user-mgmt-user-name");
            const emailCell = row.querySelector(".user-mgmt-user-email");
            const text = (nameCell?.innerText + " " + emailCell?.innerText).toLowerCase();

            if (!filter || text.includes(filter)) {
                row.style.display = "table-row";
                anyVisible = true;
            } else {
                row.style.display = "none";
            }
        });

        // Show "No users found" only when searching and nothing matches
        const noUsersMessage = document.getElementById("noUsersMessage");
        if (noUsersMessage) {
            noUsersMessage.style.display = filter && !anyVisible ? "table-row" : "none";
        }
    }

    // Trigger search when Enter is pressed
    searchInput.addEventListener("keydown", (e) => {
        if (e.key === "Enter") {
            e.preventDefault(); // prevent form submission
            filterUsers();
        }
    });

    // Trigger search when search button is clicked
    searchButton.addEventListener("click", filterUsers);
    
    // ==========================
    // Delete User Modal
    // ==========================
    let adminCurrentDeleteForm = null;

    function adminOpenDeleteModal(form) {
        adminCurrentDeleteForm = form;
        showModal("adminDeleteModal");
        return false; // prevent immediate form submission
    }

    function adminConfirmDeleteAction() {
        if (adminCurrentDeleteForm) adminCurrentDeleteForm.submit();
    }

    // ==========================
    // Toggle User Status Modal
    // ==========================
    let adminCurrentToggleForm = null;

    function adminOpenToggleModal(form, action) {
        adminCurrentToggleForm = form;

        const msg = `Are you sure you want to ${action.toLowerCase()} this user?`;
        document.getElementById("adminToggleMessage").innerText = msg;

        const confirmBtn = document.getElementById("adminConfirmToggle");
        const reasonTextarea = document.getElementById("adminToggleReason");

        if (action === "Reactivate") {
             confirmBtn.style.backgroundColor = "#4CAF50"; // green
            confirmBtn.innerText = "Reactivate";
            reasonTextarea.style.display = "none";
            reasonTextarea.value = "";
            confirmBtn.disabled = false;
        } else {
            reasonTextarea.style.display = "block";
            reasonTextarea.value = "";
            confirmBtn.innerText = "Deactivate";
            confirmBtn.disabled = true; // Disable until reason entered

            // Enable/disable confirm button based on textarea input
            reasonTextarea.addEventListener("input", () => {
                confirmBtn.disabled = reasonTextarea.value.trim() === "";
            });
        }

        showModal("adminToggleModal");
        return false;
    }

    function adminConfirmToggleAction() {
        if (!adminCurrentToggleForm) return;

        const action = document.getElementById("adminConfirmToggle").innerText; // "Deactivate" or "Reactivate"
        let hiddenInput = adminCurrentToggleForm.querySelector("input[name='reason']");

        if (action === "Reactivate") {
            if (hiddenInput) hiddenInput.remove();
        } else {
            const reason = document.getElementById("adminToggleReason").value;
            if (!hiddenInput) {
                hiddenInput = document.createElement("input");
                hiddenInput.type = "hidden";
                hiddenInput.name = "reason";
                adminCurrentToggleForm.appendChild(hiddenInput);
            }
            hiddenInput.value = reason;
        }

        adminCurrentToggleForm.submit();
    }

    // ==========================
    // Tab Switching
    // ==========================
    const userTabs = document.querySelectorAll(".user-mgmt-user-tab");
    const userRows = document.querySelectorAll(".user-mgmt-user-row");

    userTabs.forEach(tab => {
        tab.addEventListener("click", () => {
            userTabs.forEach(t => t.classList.remove("active"));
            tab.classList.add("active");

            const selectedTab = tab.dataset.tab;
            userRows.forEach(row => {
                row.style.display = (row.dataset.tab === selectedTab) ? "table-row" : "none";
            });

            filterUsers();
        });
    });

    // ==========================
    // Modal Utility
    // ==========================
    function showModal(modalId) {
        document.getElementById("adminModalBackdrop").style.display = "block";
        document.getElementById(modalId).style.display = "block";
    }

    function adminCloseModal() {
        document.getElementById("adminModalBackdrop").style.display = "none";
        document.querySelectorAll(".user-mgmt-admin-modal").forEach(m => m.style.display = "none");
        adminCurrentDeleteForm = null;
        adminCurrentToggleForm = null;
    }

    // Event listeners
    document.getElementById("adminModalBackdrop").addEventListener("click", adminCloseModal);
    document.addEventListener("keydown", e => { if (e.key === "Escape") adminCloseModal(); });
    document.getElementById("adminConfirmDelete").addEventListener("click", adminConfirmDeleteAction);
    document.getElementById("adminConfirmToggle").addEventListener("click", adminConfirmToggleAction);

</script>