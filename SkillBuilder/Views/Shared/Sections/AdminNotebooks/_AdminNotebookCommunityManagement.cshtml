@model SkillBuilder.Models.ViewModels.AdminProfileViewModel

@{
    var existingCommunities = Model.AllCommunities?.Where(c => !c.IsArchived).ToList() ?? new List<Community>();
    var deletedCommunities = Model.AllCommunities?.Where(c => c.IsArchived).ToList() ?? new List<Community>();

}
<style>
    .community-mgmt-section {
        padding: 2rem;
    }

    .community-mgmt-header {
        font-size: 1.8rem;
        font-weight: bold;
        margin-bottom: 1.5rem;
        color: #344AEA;
    }

    .community-mgmt-controls {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
    }

    /* Full-width search bar */
    .community-mgmt-search-bar {
        display: flex;
        width: 100%;
        border: 1px solid #ccc;
        border-radius: 8px;
        overflow: hidden;
        background: #fff;
        box-shadow: 0 1px 3px rgba(0,0,0,0.08);
    }

        .community-mgmt-search-bar input {
            flex: 1;
            padding: 0.6rem 1rem;
            border: none;
            outline: none;
            font-size: 1rem;
        }

        .community-mgmt-search-bar button {
            background-color: #344AEA;
            border: none;
            padding: 0.6rem 1rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color 0.2s ease;
        }

            .community-mgmt-search-bar button:hover {
                background-color: #2a3bcf;
            }

            .community-mgmt-search-bar button img {
                width: 1.2rem;
                height: 1.2rem;
            }

    .community-mgmt-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 1.2rem;
    }

        .community-mgmt-table th {
            text-align: left;
            font-size: 1rem;
            color: #666;
            padding: 0.5rem 1rem;
        }

    .community-mgmt-row {
        background-color: #fafafa;
        border-radius: 10px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.05);
        transition: background-color 0.2s ease;
    }

        .community-mgmt-row:hover {
            background-color: #efefef;
            transform: scale(1.01);
            box-shadow: 0 3px 10px rgba(0,0,0,0.08);
            transition: background-color 0.25s ease, transform 0.2s ease, box-shadow 0.25s ease;
        }

    .community-mgmt-cell {
        padding: 1rem;
        vertical-align: middle;
    }

        .community-mgmt-cell.community-author {
            text-align: center;
        }

        .community-mgmt-cell.community-actions {
            text-align: right;
        }

    .community-mgmt-name a {
        font-weight: bold;
        font-size: 1rem;
        color: #7D3C98;
        text-decoration: none;
    }

    .community-mgmt-creator {
        color: #222;
        text-align: center;
        font-weight: 600;
    }

    .community-mgmt-action-buttons {
        display: flex;
        justify-content: flex-end;
    }

    .community-mgmt-action-btn {
        background-color: #FEE4E2;
        color: #B42318;
        padding: 0.8rem 0.8rem;
        border: solid #B42318 1px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 0.9rem;
        font-weight: bold;
    }

        .community-mgmt-delete-btn:hover {
            background-color: #E74C3C;
            color: white;
        }

    /* Modal & backdrop */
    .community-mgmt-modal-backdrop {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        z-index: 1000;
    }

    .community-mgmt-modal {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: #fff;
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        z-index: 1001;
        max-width: 400px;
        width: 90%;
        text-align: center;
    }

        .community-mgmt-modal h3 {
            margin-bottom: 1rem;
            font-size: 1.3rem;
            font-weight: bold;
            color: #333;
        }

        .community-mgmt-modal p {
            margin-bottom: 1.5rem;
            font-size: 1rem;
            color: #555;
        }

    .community-mgmt-modal-buttons {
        display: flex;
        justify-content: center;
        gap: 1rem;
    }

        .community-mgmt-modal-buttons button {
            padding: 0.6rem 1.2rem;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: bold;
            font-size: 0.95rem;
            transition: background-color 0.2s ease, transform 0.15s ease;
        }

            .community-mgmt-modal-buttons button:hover {
                transform: scale(1.05);
            }

    .community-mgmt-modal-cancel {
        background-color: #bdc3c7;
        color: #2c3e50;
    }

    .community-mgmt-modal-confirm {
        background-color: #e74c3c;
        color: #fff;
    }

        .community-mgmt-modal-confirm:disabled {
            background-color: #ccc;
            cursor: not-allowed;
            opacity: 0.6;
            transform: none !important;
        }

        .community-mgmt-modal-confirm:not(:disabled):hover {
            transform: scale(1.05);
            background-color: #c0392b;
        }

    .community-mgmt-tabs {
        display: flex;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .community-mgmt-tab {
        padding: 0.75rem 1.5rem;
        background: transparent;
        border: none;
        border-bottom: 3px solid transparent;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.2s ease;
        color: #555;
    }

        .community-mgmt-tab.active {
            border-bottom-color: #344AEA;
            color: #344AEA;
        }

        .community-mgmt-tab:hover {
            color: #344AEA;
        }


    .community-mgmt-action-buttons {
        display: flex;
        gap: 0.5rem;
        justify-content: flex-end;
        align-items: center;
    }

        .community-mgmt-action-buttons button {
            background-color: #FEE4E2;
            color: #B42318;
            padding: 0.8rem 0.8rem;
            border: solid #B42318 1px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: bold;
            max-width: 110px;
            min-width: 110px;
        }


    .community-mgmt-delete-btn {
        background-color: #e74c3c;
    }

        .community-mgmt-delete-btn:hover {
            background-color: #c0392b;
            color: white;
        }

    .community-mgmt-unpublish-btn {
        background-color: #e74c3c;
    }

        .community-mgmt-unpublish-btn:hover {
            background-color: #c0392b;
            color: white;
        }

    .community-mgmt-publish-btn {
        background-color: #A5D6A7 !important;
        color: #4CAF50 !important;
    }

        .community-mgmt-publish-btn:hover {
            background-color: #3d8e41 !important;
            color: white !important;
        }
</style>

<div class="community-mgmt-section">
    <div class="community-mgmt-header">All Communities</div>

    <div class="community-mgmt-controls">
        <div class="community-mgmt-search-bar">
            <input type="text" placeholder="Search by community name or creator..." />
            <button type="button">
                <img src="/assets/Icons/Search.ico" alt="Search" />
            </button>
        </div>
    </div>

    <!-- Tabs -->
    <div class="community-mgmt-tabs">
        <button class="community-mgmt-tab active" data-tab="existing">Existing</button>
        <!-- <button class="community-mgmt-tab" data-tab="deleted">Deleted</button> -->
    </div>

    <table class="community-mgmt-table">
            <colgroup>
                <col style="width: 33%;">
                <col style="width: 33%; text-align:center;">
                <col style="width: 33%; text-align:right;">
            </colgroup>
        <thead>
            <tr>
                <th>Community Name</th>
                <th style="text-align: center;">Created By</th>
                <th style="text-align: right;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @* Existing Communities *@
            @if (existingCommunities.Any())
            {
                foreach (var community in existingCommunities)
                {
                    <tr class="community-mgmt-row" data-tab="existing">
                        <td class="community-mgmt-cell community-mgmt-name">
                            <a href="@Url.Action("CommunityDetails", "AdminProfile", new { id = community.Id })">
                                @community.Name
                            </a>
                        </td>
                        <td class="community-mgmt-cell community-mgmt-creator">
                            @community.Creator.FirstName @community.Creator.LastName
                        </td>
                        <td class="community-mgmt-cell community-mgmt-actions">
                            <div class="community-mgmt-action-buttons">
                                <!-- Delete button -->
                                <form asp-action="DeleteCommunity"
                                      asp-route-id="@community.Id"
                                      asp-route-adminId="@Model.Admin.UserId"
                                      method="post"
                                      onsubmit="return communityMgmtOpenDeleteModal(this, '@community.Name');">
                                    <button type="submit" class="community-mgmt-action-btn community-mgmt-delete-btn">
                                        Delete
                                    </button>
                                </form>

                                <!-- Publish/Unpublish button -->
                                <form asp-action="ToggleCommunityStatus"
                                      asp-route-id="@community.Id"
                                      asp-route-adminId="@Model.Admin.UserId"
                                      method="post"
                                      onsubmit="return communityMgmtOpenToggleModal(this, '@(community.IsPublished ? "Unpublish" : "Publish")');">
                                    @if (community.IsPublished)
                                    {
                                        <button type="submit" class="community-mgmt-action-btn community-mgmt-unpublish-btn">Unpublish</button>
                                    }
                                    else
                                    {
                                        <button type="submit" class="community-mgmt-action-btn community-mgmt-publish-btn">Publish</button>
                                    }
                                </form>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr class="community-mgmt-row" data-tab="existing">
                    <td colspan="3" class="community-mgmt-cell" style="text-align:center; font-style:italic; color:#888;">
                        No existing communities.
                    </td>
                </tr>
            }

            @* Deleted Communities *@
            @if (deletedCommunities.Any())
            {
                foreach (var community in deletedCommunities)
                {
                    <tr class="community-mgmt-row deleted-community" data-tab="deleted" style="display:none; opacity:0.6;">
                        <td class="community-mgmt-cell community-mgmt-name">
                            <a href="@Url.Action("CommunityDetails", "AdminProfile", new { id = community.Id })">
                                @community.Name
                            </a>
                        </td>
                        <td class="community-mgmt-cell community-mgmt-creator">
                            @community.Creator.FirstName @community.Creator.LastName
                        </td>
                        <td class="community-mgmt-cell community-mgmt-actions">
                            <div class="community-mgmt-action-buttons">
                                Deleted
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr class="community-mgmt-row" data-tab="deleted" style="display:none;">
                    <td colspan="3" class="community-mgmt-cell" style="text-align:center; font-style:italic; color:#888;">
                        No deleted communities.
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Backdrop -->
<div class="community-mgmt-modal-backdrop" id="communityMgmtModalBackdrop"></div>

<!-- Delete confirmation modal -->
<div class="community-mgmt-modal" id="communityMgmtDeleteModal">
    <h3>Confirm Deletion</h3>
    <p id="communityMgmtDeleteMessage">Are you sure you want to delete this community?</p>
    <textarea id="communityMgmtDeleteReason" placeholder="Enter reason for deletion (optional)"
              style="width:100%; min-height:80px; margin-bottom:1rem; padding:0.5rem; border-radius:6px; border:1px solid #ccc; resize: none;"></textarea>
    <div class="community-mgmt-modal-buttons">
        <button class="community-mgmt-modal-cancel" onclick="communityMgmtCloseModal()">Cancel</button>
        <button class="community-mgmt-modal-confirm" id="communityMgmtConfirmDelete" disabled>Delete</button>
    </div>
</div>

<div class="community-mgmt-modal" id="communityMgmtToggleModal">
    <h3>Confirm Action</h3>
    <p id="communityMgmtToggleMessage"></p>
    <textarea id="communityMgmtToggleReason" placeholder="Enter reason (optional for unpublish)"
              style="width:100%; min-height:80px; margin-bottom:1rem; padding:0.5rem; border-radius:6px; border:1px solid #ccc; resize: none;"></textarea>
    <div class="community-mgmt-modal-buttons">
        <button class="community-mgmt-modal-cancel" onclick="communityMgmtCloseToggleModal()">Cancel</button>
        <button class="community-mgmt-modal-confirm" id="communityMgmtConfirmToggle">Yes</button>
    </div>
</div>

<script>

    let communityMgmtCurrentToggleForm = null;

    function communityMgmtOpenToggleModal(form, action) {
        communityMgmtCurrentToggleForm = form;

        document.getElementById("communityMgmtToggleMessage").innerText =
            `Are you sure you want to ${action.toLowerCase()} this community?`;

        const confirmBtn = document.getElementById("communityMgmtConfirmToggle");
        const reasonTextarea = document.getElementById("communityMgmtToggleReason");

        if (action === "Publish") {
            confirmBtn.style.backgroundColor = "#4CAF50"; // green
            confirmBtn.innerText = "Publish";
            reasonTextarea.style.display = "none";
            reasonTextarea.value = "";
            confirmBtn.disabled = false;
        } else { // Unpublish
            reasonTextarea.style.display = "block";
            reasonTextarea.value = "";
            confirmBtn.innerText = "Unpublish";
            confirmBtn.disabled = true;

            reasonTextarea.addEventListener("input", () => {
                confirmBtn.disabled = reasonTextarea.value.trim() === "";
            });
        }

        document.getElementById("communityMgmtModalBackdrop").style.display = "block";
        document.getElementById("communityMgmtToggleModal").style.display = "block";

        return false; // prevent immediate form submission
    }

    function communityMgmtConfirmToggleAction() {
        if (!communityMgmtCurrentToggleForm) return;

        const action = document.getElementById("communityMgmtConfirmToggle").innerText;
        let hiddenInput = communityMgmtCurrentToggleForm.querySelector("input[name='reason']");

        if (action === "Publish") {
            if (hiddenInput) hiddenInput.remove();
        } else {
            const reason = document.getElementById("communityMgmtToggleReason").value;
            if (!hiddenInput) {
                hiddenInput = document.createElement("input");
                hiddenInput.type = "hidden";
                hiddenInput.name = "reason";
                communityMgmtCurrentToggleForm.appendChild(hiddenInput);
            }
            hiddenInput.value = reason;
        }

        communityMgmtCurrentToggleForm.submit();
    }

    function communityMgmtCloseToggleModal() {
        document.getElementById("communityMgmtModalBackdrop").style.display = "none";
        document.getElementById("communityMgmtToggleModal").style.display = "none";
        communityMgmtCurrentToggleForm = null;
    }

    document.getElementById("communityMgmtConfirmToggle").addEventListener("click", communityMgmtConfirmToggleAction);

    const communityTabs = document.querySelectorAll(".community-mgmt-tab");
    const communityRows = document.querySelectorAll(".community-mgmt-row");

    communityTabs.forEach(tab => {
        tab.addEventListener("click", () => {
            communityTabs.forEach(t => t.classList.remove("active"));
            tab.classList.add("active");
            const selectedTab = tab.dataset.tab;

            communityRows.forEach(row => {
                row.style.display = (row.dataset.tab === selectedTab) ? "table-row" : "none";
            });

            // Apply search after tab switch
            filterCommunities();
        });
    });

    const communityReasonInput = document.getElementById("communityMgmtDeleteReason");
    const communityConfirmBtn = document.getElementById("communityMgmtConfirmDelete");

    communityReasonInput.addEventListener("input", () => {
        communityConfirmBtn.disabled = communityReasonInput.value.trim() === "";
    });

    let communityMgmtCurrentForm = null;

    function communityMgmtOpenDeleteModal(form, communityName) {
        communityMgmtCurrentForm = form;
        document.getElementById("communityMgmtDeleteMessage").innerText =
            `Are you sure you want to delete the community "${communityName}"?`;

        communityReasonInput.value = "";
        communityConfirmBtn.disabled = true;

        document.getElementById("communityMgmtModalBackdrop").style.display = "block";
        document.getElementById("communityMgmtDeleteModal").style.display = "block";
        return false;
    }

    function communityMgmtConfirmDeleteAction() {
        if (!communityMgmtCurrentForm) return;

        // Add reason to the form
        let reasonInput = communityMgmtCurrentForm.querySelector("input[name='reason']");
        if (!reasonInput) {
            reasonInput = document.createElement("input");
            reasonInput.type = "hidden";
            reasonInput.name = "reason";
            communityMgmtCurrentForm.appendChild(reasonInput);
        }
        reasonInput.value = document.getElementById("communityMgmtDeleteReason").value;

        communityMgmtCurrentForm.submit();
    }

    function communityMgmtCloseModal() {
        document.getElementById("communityMgmtModalBackdrop").style.display = "none";
        document.getElementById("communityMgmtDeleteModal").style.display = "none";
        communityMgmtCurrentForm = null;
    }

    document.getElementById("communityMgmtModalBackdrop").addEventListener("click", communityMgmtCloseModal);
    document.addEventListener("keydown", e => {
        if (e.key === "Escape") communityMgmtCloseModal();
    });
    document.getElementById("communityMgmtConfirmDelete").addEventListener("click", communityMgmtConfirmDeleteAction);

    // ----------------------
    // Community Search Feature
    // ----------------------
    const communitySearchInput = document.querySelector(".community-mgmt-search-bar input");
    const communitySearchButton = document.querySelector(".community-mgmt-search-bar button");

    // Add "No communities found" row
    const communityTbody = communityRows[0]?.parentElement;
    let noCommunityRow = document.getElementById("noCommunitiesMessage");
    if (!noCommunityRow) {
        noCommunityRow = document.createElement("tr");
        noCommunityRow.id = "noCommunitiesMessage";
        noCommunityRow.style.display = "none";
        noCommunityRow.innerHTML = `<td colspan="3" class="community-mgmt-cell" style="text-align:center; font-style:italic; color:#888;">
            No communities found.
        </td>`;
        communityTbody.appendChild(noCommunityRow);
    }

    function filterCommunities() {
        const filter = communitySearchInput.value.toLowerCase().trim();
        const activeTab = document.querySelector(".community-mgmt-tab.active").dataset.tab;

        let anyVisible = false;

        communityRows.forEach(row => {
            if (row.dataset.tab !== activeTab) {
                row.style.display = "none";
                return;
            }

            const isEmptyRow = row.querySelector(".community-mgmt-cell")?.innerText.includes("No");
            if (isEmptyRow) {
                row.style.display = !filter ? "table-row" : "none";
                return;
            }

            const name = row.querySelector(".community-mgmt-name")?.innerText.toLowerCase() || "";
            const creator = row.querySelector(".community-mgmt-creator")?.innerText.toLowerCase() || "";

            if (!filter || name.includes(filter) || creator.includes(filter)) {
                row.style.display = "table-row";
                anyVisible = true;
            } else {
                row.style.display = "none";
            }
        });

        noCommunityRow.style.display = filter && !anyVisible ? "table-row" : "none";
    }

    // Trigger search on Enter
    communitySearchInput.addEventListener("keydown", e => {
        if (e.key === "Enter") {
            e.preventDefault();
            filterCommunities();
        }
    });

    // Trigger search on button click
    communitySearchButton.addEventListener("click", filterCommunities);
</script>