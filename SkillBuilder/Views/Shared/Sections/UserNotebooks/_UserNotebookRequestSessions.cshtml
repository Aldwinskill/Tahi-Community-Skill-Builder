@{
    var activeSessionTab = ViewData["ActiveRequestTab"] as string ?? "pending";
}

<style>
    .user-sessions-section {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .user-sessions-header {
        font-size: 1.8rem;
        font-weight: bold;
        color: #344AEA;
        margin-bottom: 1rem;
    }

    .user-sessions-tabs {
        display: flex;
        gap: 2rem;
        margin-bottom: 1rem;
    }

    .user-sessions-tab {
        padding: 0.75rem 1.5rem;
        background-color: transparent;
        border: none;
        border-bottom: 2px solid transparent;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .user-sessions-tab.active {
            border-bottom: 3px solid #344AEA;
            color: #344AEA;
        }

        .user-sessions-tab:hover {
            color: #344AEA;
        }

    .user-sessions-content .user-sessions-panel {
        display: none;
    }

        .user-sessions-content .user-sessions-panel.active {
            display: block;
        }
</style>

<section class="user-sessions-section">
    <h2 class="user-sessions-header">Request Sessions</h2>

    <div class="user-sessions-tabs">
        <button class="user-sessions-tab @(activeSessionTab == "pending" ? "active" : "")" data-tab="pending">Pending Requests</button>
        <button class="user-sessions-tab @(activeSessionTab == "upcoming" ? "active" : "")" data-tab="upcoming">Upcoming Sessions</button>
        <button class="user-sessions-tab @(activeSessionTab == "declined" ? "active" : "")" data-tab="declined">Declined Requests</button>
        <button class="user-sessions-tab @(activeSessionTab == "completed" ? "active" : "")" data-tab="completed">Completed Sessions</button>
    </div>

    <div class="user-sessions-content">
        <div class="user-sessions-panel @(activeSessionTab == "pending" ? "active" : "")" data-tab="pending">
            @await Html.PartialAsync("Sections/UserNotebooks/RequestSessionsNotebooks/_RequestSessionsNotebookPending")
        </div>
        <div class="user-sessions-panel @(activeSessionTab == "upcoming" ? "active" : "")" data-tab="upcoming">
            @await Html.PartialAsync("Sections/UserNotebooks/RequestSessionsNotebooks/_RequestSessionsNotebookUpcoming")
        </div>
        <div class="user-sessions-panel @(activeSessionTab == "declined" ? "active" : "")" data-tab="declined">
            @await Html.PartialAsync("Sections/UserNotebooks/RequestSessionsNotebooks/_RequestSessionsNotebookDeclined")
        </div>
        <div class="user-sessions-panel @(activeSessionTab == "completed" ? "active" : "")" data-tab="completed">
            @await Html.PartialAsync("Sections/UserNotebooks/RequestSessionsNotebooks/_RequestSessionsNotebookCompleted")
        </div>
    </div>
</section>

<script>
    const sessionTabs = document.querySelectorAll('.user-sessions-tab');
    const sessionPanels = document.querySelectorAll('.user-sessions-panel');

    sessionTabs.forEach(tab => {
        tab.addEventListener('click', () => {
            const selected = tab.dataset.tab;

            sessionTabs.forEach(t => t.classList.remove('active'));
            tab.classList.add('active');

            sessionPanels.forEach(panel => {
                panel.classList.toggle('active', panel.dataset.tab === selected);
            });
        });
    });
</script>