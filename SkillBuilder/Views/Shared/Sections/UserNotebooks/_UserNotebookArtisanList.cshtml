@model SkillBuilder.Models.ViewModels.UserProfileViewModel

<style>
    .user-artisanlist-container {
        padding: 2rem 4rem;
    }

    .user-artisanlist-header {
        font-size: 1.8rem;
        font-weight: bold;
        color: #344AEA;
        margin-bottom: 2rem;
    }

    /* 🔍 Search & Filter */
    .user-artisan-search-wrapper {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
    }

        .user-artisan-search-wrapper input {
            flex: 1;
            padding: 0.6rem 1rem;
            border: 1px solid #ccc;
            border-radius: 8px 0 0 8px; /* fused with button */
            font-size: 1rem;
            outline: none;
        }

        .user-artisan-search-wrapper select {
            padding: 0.6rem 1rem;
            border-radius: 0; /* fused style */
            border: 1px solid #ccc;
            font-size: 1rem;
            background-color: white;
            cursor: pointer;
        }

        .user-artisan-search-wrapper button {
            background-color: #344AEA;
            border: none;
            border-radius: 0 8px 8px 0; /* fused with input */
            padding: 0.6rem 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

            .user-artisan-search-wrapper button img {
                width: 1.2rem;
                height: 1.2rem;
                filter: brightness(0) invert(1);
            }

    /* 🧾 Table */
    .user-artisan-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 0.8rem;
    }

    .user-artisan-row {
        background-color: #f9f9f9;
        border-radius: 10px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
        transition: transform 0.15s ease;
    }

        .user-artisan-row:hover {
            transform: scale(1.01);
        }

        .user-artisan-row td {
            padding: 1rem 1.5rem;
            vertical-align: middle;
        }

    .artisan-left {
        width: 40%;
    }

    .artisan-center {
        width: 30%;
    }

    .artisan-right {
        width: 30%;
    }

    .user-artisan-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

        .user-artisan-info img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            object-fit: cover;
        }

    .user-artisan-name a {
        font-weight: bold;
        color: #333;
        font-size: 1rem;
        text-decoration: none;
    }

        .user-artisan-name a:hover {
            text-decoration: underline;
        }

    .user-artisan-profession,
    .user-artisan-hometown {
        text-align: left;
        font-size: 0.95rem;
        color: #555;
    }

    .user-artisan-empty {
        text-align: center;
        color: #777;
        font-size: 1rem;
        margin-top: 2rem;
        display: none;
    }

        .user-artisan-empty.active {
            display: block;
        }
</style>

<div class="user-artisanlist-container">
    <div class="user-artisanlist-header">List of Artisans</div>

    <!-- Search + Filter -->
    <div class="user-artisan-search-wrapper">
        <input type="text" id="userArtisanSearch" placeholder="Search by name..." />
        <select id="userArtisanFilter">
            <option value="">All Professions</option>
            <option value="Potter">Potter</option>
            <option value="Weaver">Weaver</option>
            <option value="Woodcarver">Woodcarver</option>
            <option value="Shoemaker">Shoemaker</option>
            <option value="Paper Crafter">Paper Crafter</option>
            <option value="Embroiderer">Embroiderer</option>
        </select>
        <button type="button" id="userArtisanSearchBtn">
            <img src="/assets/Icons/Search.ico" alt="Search" />
        </button>
    </div>

    @if (Model.Artisans == null || !Model.Artisans.Any())
    {
        <div class="user-artisan-empty active">No artisans found.</div>
    }
    else
    {
        <table class="user-artisan-table">
            <tbody>
                @foreach (var artisan in Model.Artisans)
                {
                    <tr class="user-artisan-row">
                        <td class="artisan-left">
                            <div class="user-artisan-info">
                                <img src="@artisan.User.UserAvatar" alt="Avatar" />
                                <div class="user-artisan-name">
                                    <a href="/ArtisanViewAsMentor/@artisan.UserId">
                                        @artisan.User.FirstName @artisan.User.LastName
                                    </a>
                                </div>
                            </div>
                        </td>
                        <td class="artisan-center">
                            <div class="user-artisan-profession">@artisan.Profession</div>
                        </td>
                        <td class="artisan-right">
                            <div class="user-artisan-hometown">@artisan.Hometown</div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="user-artisan-empty">No matching artisans found.</div>
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const searchInput = document.getElementById("userArtisanSearch");
        const filterSelect = document.getElementById("userArtisanFilter");
        const searchBtn = document.getElementById("userArtisanSearchBtn");
        const rows = document.querySelectorAll(".user-artisan-row");
        const emptyMsg = document.querySelector(".user-artisan-empty");

        if (!searchInput || !searchBtn || !filterSelect) return;

        function filter() {
            const searchQuery = searchInput.value.toLowerCase().trim();
            const filterValue = filterSelect.value;
            let anyVisible = false;

            rows.forEach(row => {
                const name = row.querySelector(".user-artisan-name a").innerText.toLowerCase();
                const profession = row.querySelector(".user-artisan-profession").innerText.trim();

                const matchesSearch = !searchQuery || name.includes(searchQuery); // only search if query exists
                const matchesFilter = !filterValue || profession === filterValue;

                const isVisible = matchesSearch && matchesFilter;
                row.style.display = isVisible ? "table-row" : "none";

                if (isVisible) anyVisible = true;
            });

            emptyMsg.classList.toggle("active", !anyVisible);
        }

        // Trigger text search only on button click or Enter
        searchBtn.addEventListener("click", filter);
        searchInput.addEventListener("keydown", e => {
            if (e.key === "Enter") {
                e.preventDefault();
                filter();
            }
        });

        // Trigger profession filter live
        filterSelect.addEventListener("change", filter);
    });
</script>