@using SkillBuilder.Models.ViewModels
@model UserProfileViewModel

@{
    ViewData["IsCatalogPage"] = false;
    ViewData["IsUserProfile"] = true;
}

<style>
    .user-dash-stats {
        display: flex;
        gap: 2rem;
        margin: 3rem 0;
        justify-content: space-between;
        flex-wrap: wrap;
    }

    .user-dash-card {
        flex: 1 1 30%;
        background-color: #E6EEFF;
        padding: 2rem;
        border-radius: 16px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.05);
        transition: transform 0.3s ease;
        text-align: center;
        min-width: 200px;
    }

        .user-dash-card:hover {
            transform: translateY(-4px);
        }

    .user-dash-card-title {
        font-size: 1.2rem;
        color: #344AEA;
        font-weight: 600;
        margin-bottom: 0.8rem;
    }

    .user-dash-card-value {
        font-size: 2rem;
        font-weight: bold;
        color: #222;
    }
</style>

<div class="user-dash-stats">
    <div class="user-dash-card">
        <div class="user-dash-card-title">Total Enrollments</div>
        <div class="user-dash-card-value">@((Model.Enrollments != null) ? Model.Enrollments.Count() : 0)</div>
    </div>
    <div class="user-dash-card">
        <div class="user-dash-card-title">Total Points</div>
        <div class="user-dash-card-value" id="pointsDisplay">@Model.User.Points</div>
    </div>
    <div class="user-dash-card">
        <div class="user-dash-card-title">Profile Status</div>
        <div class="user-dash-card-value">Active</div>
    </div>
</div>

@if (Model.CourseProgresses != null && Model.CourseProgresses.Any())
{
    @await Html.PartialAsync("Sections/UserNotebooks/_UserNotebookProgress", Model.CourseProgresses)
}
else
{
    @await Html.PartialAsync("Sections/_CourseSection", Model.AllCourses, ViewData)
}