@model SkillBuilder.Models.ViewModels.UserProfileViewModel

<style>
    /* ===== Card ===== */
    .user-mycommunity-pending-request-card {
        display: grid;
        grid-template-columns: 2fr 1fr 3fr 2fr;
        align-items: center;
        padding: 0.8rem 1rem;
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.08);
        margin-bottom: 0.75rem;
        gap: 0.5rem;
    }

    .user-mycommunity-requester-info {
        display: flex;
        align-items: center;
        gap: 0.6rem;
    }

    .user-mycommunity-requester-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        object-fit: cover;
    }

    .user-mycommunity-requester-name {
        font-weight: 600;
        color: #111827;
    }

    .user-mycommunity-request-status {
        font-weight: 500;
        color: #6B7280;
    }

    .user-mycommunity-request-message {
        font-size: 0.9rem;
        color: #374151;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .user-mycommunity-request-actions button {
        padding: 0.4rem 0.8rem;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 500;
        margin-right: 0.5rem;
        transition: background 0.18s ease, transform 0.06s ease;
    }

    .user-mycommunity-approve-btn {
        background-color: #34D399;
        color: white;
    }

        .user-mycommunity-approve-btn:hover {
            background-color: #10B981;
            transform: translateY(-1px);
        }

    .user-mycommunity-reject-btn {
        background-color: #F87171;
        color: white;
    }

        .user-mycommunity-reject-btn:hover {
            background-color: #EF4444;
            transform: translateY(-1px);
        }

    .user-mycommunity-no-requests {
        text-align: center;
        padding: 1rem;
        color: #777;
        font-weight: bold;
    }

    /* ===== Modal ===== */
    .user-mycommunity-modal-overlay {
        position: fixed;
        inset: 0;
        display: none;
        justify-content: center;
        align-items: center;
        background: rgba(15, 23, 42, 0.5);
        z-index: 1200;
        padding: 1.25rem;
        backdrop-filter: blur(2px);
        transition: opacity 180ms ease, visibility 180ms ease;
        opacity: 0;
        visibility: hidden;
    }

        .user-mycommunity-modal-overlay.show {
            display: flex;
            opacity: 1;
            visibility: visible;
        }

    .user-mycommunity-modal {
        background-color: #fff;
        border-radius: 12px;
        width: 100%;
        max-width: 520px;
        box-shadow: 0 8px 30px rgba(2,6,23,0.15);
        transform: translateY(-6px);
        animation: user-mycommunity-popIn 200ms ease forwards;
    }

    .user-mycommunity-modal-header {
        padding: 1.25rem 1.25rem 0.5rem 1.25rem;
        border-bottom: 1px solid #EEF2F7;
    }

        .user-mycommunity-modal-header h3 {
            margin: 0;
            font-size: 1.15rem;
            color: #0F172A;
            font-weight: 600;
        }

    .user-mycommunity-modal-body {
        padding: 0.75rem 1.25rem;
        color: #334155;
        font-size: 0.95rem;
    }

        .user-mycommunity-modal-body textarea {
            width: 100%;
            min-height: 92px;
            padding: 0.6rem 0.75rem;
            border-radius: 8px;
            border: 1px solid #D1D5DB;
            font-size: 0.95rem;
            resize: vertical;
        }

            .user-mycommunity-modal-body textarea:focus {
                outline: none;
                border-color: #60A5FA;
                box-shadow: 0 0 0 3px rgba(96,165,250,0.12);
            }

    .user-mycommunity-modal-footer {
        padding: 0.85rem 1.25rem 1.25rem 1.25rem;
        display: flex;
        justify-content: flex-end;
        gap: 0.6rem;
        border-top: 1px solid #F1F5F9;
    }

    .user-mycommunity-cancel-btn {
        background-color: #F3F4F6;
        color: #0F172A;
        font-weight: 600;
        border: none;
        border-radius: 8px;
        padding: 0.55rem 0.95rem;
        cursor: pointer;
    }

    .user-mycommunity-confirm-btn {
        border: none;
        border-radius: 8px;
        padding: 0.55rem 0.95rem;
        font-weight: 600;
        cursor: pointer;
        color: white;
    }

    .user-mycommunity-confirm-approve {
        background-color: #10B981;
        box-shadow: 0 2px 10px rgba(16,185,129,0.12);
    }

    .user-mycommunity-confirm-reject {
        background-color: #EF4444;
        box-shadow: 0 2px 10px rgba(239,68,68,0.12);
    }

    .user-mycommunity-confirm-btn[disabled] {
        background-color: #93C5FD;
        cursor: not-allowed;
    }

    body.user-mycommunity-modal-open {
        overflow: hidden;
    }
</style>

@if (Model.PendingJoinRequests == null || !Model.PendingJoinRequests.Any())
{
    <div class="user-mycommunity-no-requests">No pending join requests.</div>
}
else
{
    <div>
        @foreach (var request in Model.PendingJoinRequests)
        {
            <div class="user-mycommunity-pending-request-card" data-request-id="@request.Id">
                <div class="user-mycommunity-requester-info">
                    <img src="@request.User.UserAvatar" class="user-mycommunity-requester-avatar" />
                    <span class="user-mycommunity-requester-name">@request.User.FirstName @request.User.LastName</span>
                </div>
                <div class="user-mycommunity-request-status">@request.Status</div>
                <div class="user-mycommunity-request-message">@request.ShortMessage</div>
                <div class="user-mycommunity-request-actions">
                    <button class="user-mycommunity-approve-btn" type="button"
                            onclick="openApproveModal(@request.Id, '@request.User.FirstName @request.User.LastName')">
                        Approve
                    </button>
                    <button class="user-mycommunity-reject-btn" type="button"
                            onclick="openRejectModal(@request.Id, '@request.User.FirstName @request.User.LastName')">
                        Reject
                    </button>
                </div>
            </div>
        }
    </div>
}

<!-- ===== Approve Modal ===== -->
<div class="user-mycommunity-modal-overlay" id="approveModal">
    <div class="user-mycommunity-modal" role="dialog">
        <div class="user-mycommunity-modal-header">
            <h3>Approve Join Request</h3>
        </div>
        <div class="user-mycommunity-modal-body">
            <p id="approveBody">Are you sure you want to approve this join request?</p>
        </div>
        <div class="user-mycommunity-modal-footer">
            <button class="user-mycommunity-cancel-btn" onclick="closeModal('approveModal')">Cancel</button>
            <button id="confirmApproveBtn" class="user-mycommunity-confirm-btn user-mycommunity-confirm-approve">Approve</button>
        </div>
    </div>
</div>

<!-- ===== Reject Modal ===== -->
<div class="user-mycommunity-modal-overlay" id="rejectModal">
    <div class="user-mycommunity-modal" role="dialog">
        <div class="user-mycommunity-modal-header">
            <h3>Reject Join Request</h3>
        </div>
        <div class="user-mycommunity-modal-body">
            <p id="rejectBody">Provide a reason for rejection:</p>
            <textarea id="rejectReason" placeholder="Enter reason (required)"></textarea>
        </div>
        <div class="user-mycommunity-modal-footer">
            <button class="user-mycommunity-cancel-btn" onclick="closeModal('rejectModal')">Cancel</button>
            <button id="confirmRejectBtn" class="user-mycommunity-confirm-btn user-mycommunity-confirm-reject" disabled>Reject</button>
        </div>
    </div>
</div>

<script>
    let selectedRequestId = null;
    let selectedUserName = '';

    function showOverlay(id) {
        const overlay = document.getElementById(id);
        if (!overlay) return;
        overlay.classList.add('show');
        document.body.classList.add('user-mycommunity-modal-open');
    }

    function hideOverlay(id) {
        const overlay = document.getElementById(id);
        if (!overlay) return;
        overlay.classList.remove('show');
        document.body.classList.remove('user-mycommunity-modal-open');
    }

    function openApproveModal(requestId, userName) {
        selectedRequestId = requestId;
        selectedUserName = userName;
        document.getElementById('approveBody').textContent =
            `Are you sure you want to approve ${userName}'s join request?`;
        showOverlay('approveModal');
    }

    function openRejectModal(requestId, userName) {
        selectedRequestId = requestId;
        selectedUserName = userName;
        document.getElementById('rejectBody').textContent =
            `Please provide a reason for rejecting ${userName}'s request:`;
        showOverlay('rejectModal');
    }

    function closeModal(id) {
        hideOverlay(id);
        if (id === 'rejectModal') resetRejectModal();
    }

    function resetRejectModal() {
        const ta = document.getElementById('rejectReason');
        ta.value = '';
        document.getElementById('confirmRejectBtn').disabled = true;
    }

    document.getElementById('rejectReason').addEventListener('input', function () {
        document.getElementById('confirmRejectBtn').disabled = this.value.trim() === '';
    });

    document.getElementById('confirmApproveBtn').addEventListener('click', async () => {
        hideOverlay('approveModal');
        await handleJoinRequest(selectedRequestId, true);
    });

    document.getElementById('confirmRejectBtn').addEventListener('click', async () => {
        const reason = document.getElementById('rejectReason').value.trim();
        hideOverlay('rejectModal');
        await handleJoinRequest(selectedRequestId, false, reason);
    });

    async function handleJoinRequest(requestId, approve, reason = "") {
        try {
            const response = await fetch('/Community/HandleJoinRequest', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ requestId, approve, reason })
            });
            const result = await response.json();
            if (result.success) {
                const card = document.querySelector(`[data-request-id='${requestId}']`);
                if (card) card.remove();
                window.location.reload();
            } else alert(result.message || 'Failed to process request.');
        } catch (err) {
            console.error(err);
            alert('Error processing request.');
        }
    }
</script>