@{
    var activeTab = ViewData["ActiveCourseTab"] as string ?? "in-progress";
}

<style>
    .user-courses-section {
        display: flex;
        flex-direction: column;
    }

    .user-courses-header {
        font-size: 1.8rem;
        color: #344AEA;
        margin-bottom: 1rem;
    }

    .user-courses-tabs {
        display: flex;
    }

    .user-courses-tab {
        padding: 0.75rem 1.5rem;
        background-color: transparent;
        border: none;
        border-bottom: 2px solid transparent;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .user-courses-tab.active {
            border-bottom: 3px solid #344AEA;
            color: #344AEA;
        }

        .user-courses-tab:hover {
            color: #344AEA;
        }

    .user-courses-content .user-courses-panel {
        display: none;
    }

        .user-courses-content .user-courses-panel.active {
            display: block;
        }
</style>

<div class="user-courses-section">
    <h2 class="user-courses-header">My Courses</h2>

    <div class="user-courses-tabs">
        <button class="user-courses-tab @(activeTab == "in-progress" ? "active" : "")" data-tab="in-progress">In Progress</button>
        <button class="user-courses-tab @(activeTab == "completed" ? "active" : "")" data-tab="completed">Completed</button>
    </div>

    <div class="user-courses-content">
        <div class="user-courses-panel @(activeTab == "in-progress" ? "active" : "")" data-tab="in-progress">
            @await Html.PartialAsync("Sections/UserNotebooks/MyCoursesNotebooks/_MyCoursesNotebookInProgress", (List<SkillBuilder.Models.Course>)Model.EnrolledCourses)
        </div>
        <div class="user-courses-panel @(activeTab == "completed" ? "active" : "")" data-tab="completed">
            @await Html.PartialAsync("Sections/UserNotebooks/MyCoursesNotebooks/_MyCoursesNotebookCompleted", (List<SkillBuilder.Models.Course>)Model.EnrolledCourses)
        </div>
    </div>
</div>

<script>
    const userCourseTabs = document.querySelectorAll('.user-courses-tab');
    const userCoursePanels = document.querySelectorAll('.user-courses-panel');

    userCourseTabs.forEach(tab => {
        tab.addEventListener('click', () => {
            const selected = tab.dataset.tab;

            userCourseTabs.forEach(t => t.classList.remove('active'));
            tab.classList.add('active');

            userCoursePanels.forEach(panel => {
                panel.classList.toggle('active', panel.dataset.tab === selected);
            });
        });
    });
</script>