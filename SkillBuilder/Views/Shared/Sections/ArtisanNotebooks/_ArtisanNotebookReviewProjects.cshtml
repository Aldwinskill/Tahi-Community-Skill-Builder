@model SkillBuilder.Models.ViewModels.ArtisanProfileViewModel

@{
    var activeTab = ViewData["ActiveProjectTab"] as string ?? "pending";
}

<style>
    .artisan-projects-section {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .artisan-projects-header {
        font-size: 1.8rem;
        color: #344AEA;
        margin-bottom: 1rem;
    }

    /* Tabs */
    .artisan-projects-tabs {
        display: flex;
        gap: 2rem;
        margin-bottom: 1rem;
    }

    .artisan-projects-tab {
        padding: 0.75rem 1.5rem;
        background-color: transparent;
        border: none;
        border-bottom: 2px solid transparent;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .artisan-projects-tab.active {
            border-bottom: 3px solid #344AEA;
            color: #344AEA;
        }

        .artisan-projects-tab:hover {
            color: #344AEA;
        }

    /* Notebook */
    .artisan-projects-content .artisan-projects-panel {
        display: none;
    }

        .artisan-projects-content .artisan-projects-panel.active {
            display: block;
        }

    .artisan-notebook {
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 1.5rem;
    }
</style>

<section class="artisan-projects-section">
    <h2 class="artisan-projects-header">Projects to Review</h2>

    <!-- Tabs -->
    <div class="artisan-projects-tabs">
        <button class="artisan-projects-tab @(activeTab == "pending" ? "active" : "")" data-tab="pending">Pending</button>
        <button class="artisan-projects-tab @(activeTab == "approved" ? "active" : "")" data-tab="approved">Accepted</button>
        <button class="artisan-projects-tab @(activeTab == "rejected" ? "active" : "")" data-tab="rejected">Declined</button>
    </div>

    <!-- Notebook -->
    <div class="artisan-notebook artisan-projects-content">
        <div class="artisan-projects-panel @(activeTab == "pending" ? "active" : "")" data-tab="pending">
            @await Html.PartialAsync("Sections/ArtisanNotebooks/ProjectsToReviewNotebooks/_ReviewProjectsNotebookPending", Model.ProjectSubmissions.Where(p => p.Status == "Pending").ToList())
        </div>
        <div class="artisan-projects-panel @(activeTab == "approved" ? "active" : "")" data-tab="approved">
            @await Html.PartialAsync("Sections/ArtisanNotebooks/ProjectsToReviewNotebooks/_ReviewProjectsNotebookApproved", Model.ProjectSubmissions.Where(p => p.Status == "Approved").ToList())
        </div>
        <div class="artisan-projects-panel @(activeTab == "rejected" ? "active" : "")" data-tab="rejected">
            @await Html.PartialAsync("Sections/ArtisanNotebooks/ProjectsToReviewNotebooks/_ReviewProjectsNotebookRejected", Model.ProjectSubmissions.Where(p => p.Status == "Rejected").ToList())
        </div>
    </div>
</section>

<script>
    const tabs = document.querySelectorAll('.artisan-projects-tab');
    const panels = document.querySelectorAll('.artisan-projects-panel');

    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            const selected = tab.dataset.tab;

            tabs.forEach(t => t.classList.remove('active'));
            tab.classList.add('active');

            panels.forEach(panel => {
                panel.classList.toggle('active', panel.dataset.tab === selected);
            });
        });
    });
</script>