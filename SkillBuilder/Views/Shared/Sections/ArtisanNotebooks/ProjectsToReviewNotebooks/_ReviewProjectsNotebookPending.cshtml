@model List<SkillBuilder.Models.CourseProjectSubmission>

<style>
    /* ===== Grid Layout ===== */
    .artisan-pending-review-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 1.5rem;
    }

    /* ===== Card Styles ===== */
    .artisan-pending-review-card {
        display: flex;
        flex-direction: column;
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 12px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.08);
        overflow: hidden;
        cursor: pointer;
        max-height: 330px;
        min-height: 330px;
        max-width: 270px;
        min-width: 270px;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .artisan-pending-review-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.12);
        }

        .artisan-pending-review-card img {
            width: 100%;
            height: 220px;
            object-fit: cover;
        }

    .artisan-pending-review-content {
        padding: 1rem 1rem 0 1rem;
        flex-grow: 1;
    }

    .artisan-pending-review-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #333;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .artisan-pending-review-actions {
        margin: 1rem;
        display: flex;
        justify-content: space-between;
        gap: 1rem;
    }

    .artisan-pending-review-btn {
        flex: 1;
        padding: 0.6rem 1.2rem;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        transition: transform 0.15s ease, opacity 0.15s ease;
        font-size: 0.9rem;
    }

        .artisan-pending-review-btn:hover {
            transform: translateY(-2px);
            opacity: 0.9;
        }

    .artisan-pending-review-btn-approve {
        background-color: white;
        color: #364BE9;
        border: solid #364BE9 1px;
    }

        .artisan-pending-review-btn-approve:hover {
            background-color: #45a049;
            color: white;
            border-color: #45a049;
        }

    .artisan-pending-review-btn-decline {
        background-color: white;
        color: #364BE9;
        border: solid #364BE9 1px;
    }

        .artisan-pending-review-btn-decline:hover {
            background-color: #c0392b;
            color: white;
            border-color: #c0392b;
        }

    /* ===== Empty State ===== */
    .artisan-pending-review-empty {
        text-align: center;
        color: #777;
        font-style: italic;
        margin: 2rem 0;
    }

    /* ===== Review Modal ===== */
    .artisan-pending-review-modal {
        display: none;
        position: fixed;
        z-index: 9999;
        inset: 0;
        background-color: rgba(0,0,0,0.7);
        justify-content: center;
        align-items: center;
    }

    .artisan-pending-review-modal-content {
        background: #fff;
        border-radius: 10px;
        max-width: 700px;
        width: 90%;
        padding: 1.5rem;
        position: relative;
        animation: fadeIn 0.3s ease-in-out;
    }

    .artisan-pending-review-close {
        position: absolute;
        top: 10px;
        right: 15px;
        font-size: 1.5rem;
        cursor: pointer;
    }

    .artisan-pending-review-modal-body {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        align-items: center;
        text-align: center;
    }

    .artisan-pending-review-image {
        max-width: 100%;
        max-height: 400px;
        margin-top: 1rem;
        border-radius: 10px;
        object-fit: cover;
        box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }

    .artisan-pending-review-details {
        width: 100%;
        text-align: left;
    }

        .artisan-pending-review-details h2 {
            font-size: 1.5rem;
            color: #344AEA;
            margin: 0 0 .5rem 0;
        }

    /* ===== Confirmation Modal ===== */
    .artisan-pending-confirm-backdrop {
        display: none;
        position: fixed;
        inset: 0;
        background: rgba(0,0,0,0.6);
        z-index: 2000;
    }

    .artisan-pending-confirm-modal {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: #fff;
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        z-index: 2001;
        max-width: 400px;
        width: 90%;
        text-align: center;
        animation: fadeIn 0.3s ease;
    }

        .artisan-pending-confirm-modal h3 {
            margin-bottom: 1rem;
            font-size: 1.3rem;
            font-weight: bold;
            color: #333;
        }

    .artisan-pending-confirm-buttons {
        display: flex;
        justify-content: space-between;
        gap: 1rem;
        width: 100%;
    }

        .artisan-pending-confirm-buttons button {
            flex: 1;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: bold;
            transition: background-color 0.3s ease;
        }

    .artisan-pending-confirm-confirm {
        background-color: #4CAF50;
        color: white;
    }

    .artisan-pending-confirm-cancel {
        background-color: #ccc;
        color: #333;
    }

    .artisan-pending-confirm-confirm:hover {
        opacity: 0.9;
    }

    .artisan-pending-confirm-cancel:hover {
        background-color: #b3b3b3;
    }

    .artisan-pending-confirm-confirm:disabled {
        background-color: #ccc !important;
        color: #666 !important;
        cursor: not-allowed;
        opacity: 0.6;
    }
</style>

@if (Model != null && Model.Count > 0)
{
    <div class="artisan-pending-review-grid">
        @foreach (var submission in Model)
        {
            <div class="artisan-pending-review-card"
                 data-id="@submission.Id"
                 data-image="@submission.MediaUrl"
                 data-title="@submission.Title"
                 data-caption="@submission.Description"
                 data-course="@submission.Course?.Title"
                 data-submitted="@submission.SubmittedAt.ToString("MMMM dd, yyyy")">

                <img src="@submission.MediaUrl" alt="Project from @submission.Course?.Title" />

                <div class="artisan-pending-review-content">
                    <h3 class="artisan-pending-review-title">@submission.Title</h3>
                </div>

                <div class="artisan-pending-review-actions">
                    <button class="artisan-pending-review-btn artisan-pending-review-btn-approve" data-id="@submission.Id">
                        Approve
                    </button>
                    <button class="artisan-pending-review-btn artisan-pending-review-btn-decline" data-id="@submission.Id">
                        Decline
                    </button>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="artisan-pending-review-empty">
        No pending projects at the moment.
    </div>
}

<!-- Review Modal -->
<div id="artisanPendingReviewModal" class="artisan-pending-review-modal" aria-hidden="true">
    <div class="artisan-pending-review-modal-content" role="dialog" aria-modal="true" aria-labelledby="artisanPendingReviewTitle">
        <span class="artisan-pending-review-close" id="artisanPendingReviewClose" aria-label="Close">&times;</span>

        <div class="artisan-pending-review-modal-body">
            <div class="artisan-pending-review-top">
                <img id="artisanPendingReviewImage" class="artisan-pending-review-image" src="" alt="Project Image" />
            </div>

            <div class="artisan-pending-review-details">
                <h2 id="artisanPendingReviewTitle"></h2>
                <p id="artisanPendingReviewCaption" style="margin-bottom: 1rem;"></p>
                <p><strong>Course:</strong> <span id="artisanPendingReviewCourse"></span></p>
                <p><strong>Submitted:</strong> <span id="artisanPendingReviewDate"></span></p>
            </div>
        </div>
    </div>
</div>

<!-- Confirmation Modal -->
<div id="artisanPendingConfirmBackdrop" class="artisan-pending-confirm-backdrop"></div>
<div id="artisanPendingConfirmModal" class="artisan-pending-confirm-modal">
    <h3 id="artisanPendingConfirmMessage">Confirm action</h3>
    <div id="artisanPendingRejectReasonWrapper" style="display:none; margin-bottom:1rem;">
        <textarea id="artisanPendingRejectReason"
                  placeholder="Enter rejection reason..."
                  style="width:100%; padding:0.5rem; border-radius:6px; border:1px solid #ccc; resize:none;"></textarea>
    </div>
    <div class="artisan-pending-confirm-buttons">
        <button type="button" onclick="artisanPendingCloseModal()" class="artisan-pending-confirm-cancel">Cancel</button>
        <button id="artisanPendingConfirmAction" class="artisan-pending-confirm-confirm">Confirm</button>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        let artisanPendingCurrentAction = null;
        const confirmBtn = document.getElementById("artisanPendingConfirmAction");
        const rejectWrapper = document.getElementById("artisanPendingRejectReasonWrapper");
        const rejectTextarea = document.getElementById("artisanPendingRejectReason");

        if (rejectTextarea) {
            rejectTextarea.addEventListener("input", () => {
                confirmBtn.disabled = rejectTextarea.value.trim() === "";
            });
        }

        window.artisanPendingOpenModal = function(action, onConfirm) {
            artisanPendingCurrentAction = { action, onConfirm };
            const message = action === "Approve"
                ? "Are you sure you want to approve this submission?"
                : "Are you sure you want to reject this submission?";
            document.getElementById("artisanPendingConfirmMessage").innerText = message;

            if (action === "Approve") {
                confirmBtn.style.backgroundColor = "#4CAF50";
                confirmBtn.innerText = "Approve";
                rejectWrapper.style.display = "none";
                confirmBtn.disabled = false;
            } else {
                confirmBtn.style.backgroundColor = "#e74c3c";
                confirmBtn.innerText = "Reject";
                rejectWrapper.style.display = "block";
                rejectTextarea.value = "";
                confirmBtn.disabled = true;
            }

            document.getElementById("artisanPendingConfirmBackdrop").style.display = "block";
            document.getElementById("artisanPendingConfirmModal").style.display = "block";
        };

        window.artisanPendingCloseModal = function() {
            document.getElementById("artisanPendingConfirmBackdrop").style.display = "none";
            document.getElementById("artisanPendingConfirmModal").style.display = "none";
            artisanPendingCurrentAction = null;
        };

        confirmBtn.addEventListener("click", () => {
            if (!artisanPendingCurrentAction) return;
            let reason = artisanPendingCurrentAction.action === "Reject" ? rejectTextarea.value.trim() : null;
            artisanPendingCurrentAction.onConfirm(reason);
            artisanPendingCloseModal();
        });

        document.getElementById("artisanPendingConfirmBackdrop").addEventListener("click", artisanPendingCloseModal);
        document.addEventListener("keydown", e => { if (e.key === "Escape") artisanPendingCloseModal(); });

        const modal = document.getElementById("artisanPendingReviewModal");
        const modalImage = document.getElementById("artisanPendingReviewImage");
        const modalTitle = document.getElementById("artisanPendingReviewTitle");
        const modalCaption = document.getElementById("artisanPendingReviewCaption");
        const modalDate = document.getElementById("artisanPendingReviewDate");
        const modalCourse = document.getElementById("artisanPendingReviewCourse");
        const closeBtn = document.getElementById("artisanPendingReviewClose");

        // Card click to show modal
        document.querySelectorAll(".artisan-pending-review-card").forEach(card => {
            card.addEventListener("click", e => {
                if (e.target.closest("button")) return;
                modalImage.src = card.dataset.image;
                modalTitle.textContent = card.dataset.title;
                modalCaption.textContent = card.dataset.caption;
                modalCourse.textContent = card.dataset.course;
                modalDate.textContent = card.dataset.submitted;
                modal.style.display = "flex";
                modal.setAttribute("aria-hidden", "false");
            });
        });

        // Approve / Reject buttons
        document.querySelectorAll(".artisan-pending-review-btn").forEach(btn => {
            btn.addEventListener("click", e => {
                e.stopPropagation();
                const action = btn.classList.contains("artisan-pending-review-btn-approve") ? "Approve" : "Reject";
                const submissionId = btn.dataset.id;

                artisanPendingOpenModal(action, reason => {
                    const payload = action === "Approve" ? { id: submissionId } : { id: submissionId, reason };

                    fetch(`/CourseProject/${action}`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(payload)
                    })
                    .then(res => {
                        if (!res.ok) throw new Error("Server error");
                        return res.json();
                    })
                    .then(() => {
                        // Reload the page after successful approve/reject
                        location.reload();
                    })
                    .catch(err => {
                        console.error(`Error on ${action}:`, err);
                        alert("Something went wrong. Please try again.");
                    });
                });
            });
        });

        // Modal close logic
        closeBtn.addEventListener("click", closeModal);
        modal.addEventListener("click", e => { if (e.target === modal) closeModal(); });
        document.addEventListener("keydown", e => { if (e.key === "Escape") closeModal(); });

        function closeModal() {
            modal.style.display = "none";
            modal.setAttribute("aria-hidden", "true");
            modalImage.src = "";
        }
    });
</script>