<style>
    .teach-header {
        font-size: 1.5rem;
        font-weight: bold;
        text-align: center;
        width: 100%;
        margin: 0 auto;
        margin-bottom: 1rem;
    }

    .separator {
        display: flex;
        align-items: center;
        text-align: center;
        margin: 1rem 0;
    }

        .separator::before,
        .separator::after {
            content: '';
            flex: 1;
            border-bottom: 1px solid #ccc;
            margin: 0 0.5rem;
        }

        .separator span {
            font-size: 0.75rem;
            color: gray;
        }

    .teach-email-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.7rem;
        padding: 0.75rem 1rem;
        color: #364BE9;
        background-color: #fff;
        border: 1px solid #364BE9;
        border-radius: 6px;
        font-size: 0.8rem;
        width: 100%;
        cursor: pointer;
    }

    .teach-description {
        font-size: 0.7rem;
        text-align: center;
        margin-top: 2rem;
        color: gray;
    }

    .teach-modal-btn {
        width: 100%;
        background-color: #364BE9;
        color: white;
        padding: 0.6rem;
        border-radius: 6px;
        border: none;
        font-size: 0.85rem;
        cursor: pointer;
        transition: background-color 0.3s ease, color 0.3s ease, cursor 0.3s ease;
    }

        .teach-modal-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
            color: #666;
            border: none;
        }

    .teach-error {
        color: red;
        font-size: 0.75rem;
        margin-top: -0.5rem;
        margin-bottom: 0.8rem;
        display: block;
        font-weight: 500;
    }

    .teach-form-wrapper {
        display: none;
        flex-direction: column;
        gap: 0.3rem;
        transition: all 0.3s ease;
    }

    .teach-verification-message {
        display: none;
        padding: 2rem 1rem;
        text-align: center;
        font-size: 0.9rem;
        color: #333;
    }

    .teach-verification-message h3 {
        margin-bottom: 0.5rem;
        font-size: 1.2rem;
        font-weight: bold;
    }

    .teach-verification-message p {
        font-size: 0.85rem;
        color: #555;
    }

    .teach-back-btn {
        position: absolute;
        top: 1rem;
        left: 22rem;
        background: #eee;
        border: none;
        border-radius: 50%;
        font-weight: bold;
        padding: 0.4rem 0.7rem;
        cursor: pointer;
    }

    .teach-password-wrapper {
        position: relative;
        display: flex;
        align-items: center;
    }

        .teach-password-wrapper input {
            width: 100%;
            padding-right: 2.5rem;
            margin-bottom: 0 !important;
        }

        .teach-password-wrapper .toggle-password {
            position: absolute;
            right: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            font-size: 1rem;
            cursor: pointer;
            user-select: none;
        }

    .password-checklist {
        font-size: 0.7rem;
        margin-top: -0.5rem;
        margin-bottom: 0.5rem;
        line-height: 1.2rem;
    }

        .password-checklist p {
            margin: 0;
            color: orange;
        }

            .password-checklist p.valid {
                color: green;
            }

    .teach-verification-message {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
        padding: 2rem;
        max-width: 28rem;
        margin: 0 auto;
        color: #333;
        font-family: 'Poppins', sans-serif;
    }

        .teach-verification-message h3 {
            font-size: 1.4rem;
            font-weight: 700;
            margin-bottom: 1rem;
        }

        .teach-verification-message p {
            font-size: 0.95rem;
            line-height: 1.5;
            margin-bottom: 0.7rem;
        }

    .teach-file-input {
        padding: 0.5rem 0.75rem;
        border: 1px solid #ccc;
        border-radius: 6px;
        font-size: 0.8rem;
        width: 100%;
        cursor: pointer;
    }

    #artisan-application label {
        font-size: 0.75rem;
        font-weight: 500;
        margin-top: 0.8rem;
    }

    #artisan-introduction {
        min-height: 120px;
        padding: 0.5rem;
        font-size: 0.85rem;
        border-radius: 6px;
        border: 1px solid #ccc;
    }

    .teach-redirect {
        text-align: center;
        font-size: 0.8rem;
        margin-top: 1rem;
        color: #555;
    }

        .teach-redirect a {
            color: #364BE9;
            text-decoration: none;
            font-weight: 500;
        }

            .teach-redirect a:hover {
                text-decoration: underline;
            }

    #artisan-profession {
        width: 100%;
        padding: 0.5rem 0.75rem;
        border-radius: 6px;
        border: 1px solid #ccc;
        font-size: 0.85rem;
        background-color: #fff;
        cursor: pointer;
    }

        #artisan-profession:focus {
            border-color: #364BE9;
            outline: none;
            box-shadow: 0 0 0 1px rgba(54,75,233,0.2); /* smaller shadow */
        }
</style>

<div id="teach-modal-overlay" style="z-index: 1001;" class="modal-overlay"></div>

<div id="teach-modal" class="auth-modal">
    <div class="auth-modal-content auth-modal-container">
        <span class="auth-close-btn" id="teach-close-btn">&times;</span>

        <!-- Left Panel -->
        <div class="auth-modal-left">
            <img src="~/assets/Background Pics/LogInBG.png" />
        </div>

        <!-- Right Panel -->
        <div class="auth-modal-right">
            <h2 class="teach-header">Teach on <span style="color: #364BE9">Tahi</span></h2>

            @* <!-- Social login -->
            <div class="social-login">
                <button id="btn-google-teach"><img src="~/assets/Logos/Google.svg">Continue with Google</button>
                <button id="btn-facebook-teach"><img src="~/assets/Logos/FacebookLogo.svg">Continue with Facebook</button>
            </div>

            <div class="separator"><span>or</span></div>

            <button class="teach-email-btn" onclick="showTeachForm()">Continue with Email</button> *@

            <form id="teach-form" class="teach-form-wrapper">
                <button type="button" class="teach-back-btn" onclick="hideTeachForm()" style="margin-top: 0.5rem;">←</button>

                <label for="teach-firstname">First Name</label>
                <input type="text" id="teach-firstname" required />
                <p id="teach-fn-error" class="teach-error" style="display: none;">⚠️ Only letters are allowed.</p>

                <label for="teach-lastname">Last Name</label>
                <input type="text" id="teach-lastname" required />
                <p id="teach-ln-error" class="teach-error" style="display: none;">⚠️ Only letters are allowed.</p>

                <label for="teach-email">Email</label>
                <input type="email" id="teach-email" required />
                <p id="teach-email-error" class="teach-error" style="display: none;">⚠️ Please enter a valid email.</p>

                <label for="teach-password">Password</label>
                <div class="teach-password-wrapper">
                    <input type="password" id="teach-password" name="Password" required />
                    <span style="margin-top: -0.5rem;" class="toggle-password" onclick="togglePasswordVisibility('teach-password', this)">👁️‍🗨️</span>
                </div>

                <div id="teach-password-checklist" class="password-checklist" style="display: none;">
                    <p id="teach-check-length" data-text="At least 8 characters">❌ At least 8 characters</p>
                    <p id="teach-check-uppercase" data-text="At least one uppercase letter">❌ At least one uppercase letter</p>
                    <p id="teach-check-number" data-text="At least one number">❌ At least one number</p>
                    <p id="teach-check-symbol" data-text="At least one symbol">❌ At least one symbol</p>
                </div>

                <label for="teach-confirm">Confirm Password</label>
                <div class="teach-password-wrapper">
                    <input type="password" id="teach-confirm" name="ConfirmPassword" required />
                    <span style="margin-top: -0.5rem;" class="toggle-password" onclick="togglePasswordVisibility('teach-confirm', this)">👁️‍🗨️</span>
                </div>

                <p id="teach-confirm-warning" class="teach-error" style="display: none;">⚠️ Passwords do not match.</p>

                <div class="checkbox-signup">
                    <label class="checkbox-container">
                        <input type="checkbox" id="teach-agree" />
                        <span class="checkmark"></span>
                    </label>
                    <p>
                        By creating an account you agree with our
                        <a href="#">Terms of Service</a>,
                        <a href="#">Privacy Policy</a>, and our default
                        <a href="#">Notification Settings</a>.
                    </p>
                </div>

                <p class="teach-error" id="teach-error-msg"></p>
                <button type="submit" class="teach-modal-btn" id="teach-submit-btn" disabled>Create Instructor Account</button>
            </form>

            <div class="teach-verification-message" id="teach-verification">
                <h3>Verify your email to continue</h3>
                <p>A link has been sent to <strong id="teach-ob-email"></strong></p>
                <p>Check your inbox or spam folder.</p>

                <button class="teach-modal-btn" style="margin-top: 1.5rem;" onclick="handleTeachSkipVerification()">Do it later</button>
            </div>

            <div id="artisan-application" class="teach-form-wrapper" style="display:none;">
                <h2 class="teach-header">Complete Your Artisan Application</h2>

                <label for="artisan-profession">Profession</label>
                <select id="artisan-profession" required>
                    <option value="">Select your profession</option>
                    <option value="Potter">Potter</option>
                    <option value="Weaver">Weaver</option>
                    <option value="Shoemaker">Shoemaker</option>
                    <option value="Paper Crafter">Paper Crafter</option>
                    <option value="Embroiderer">Embroiderer</option>
                    <option value="WoodCarver">WoodCarver</option>
                    <option value="Others">Others</option>
                </select>
                <div id="artisan-other-profession-wrapper" style="display:none;">
                    <label for="artisan-other-profession">Specify Profession</label>
                    <input type="text" id="artisan-other-profession" />
                    <p id="artisan-other-profession-error" class="teach-error" style="display:none;">⚠️ Please specify your profession.</p>
                </div>
                <p id="artisan-profession-error" class="teach-error" style="display:none;">⚠️ Please select a profession.</p>

                <label for="artisan-hometown">Hometown</label>
                <input type="text" id="artisan-hometown" required />
                <p id="artisan-hometown-error" class="teach-error" style="display:none;">⚠️ Please enter a valid hometown.</p>

                <label for="artisan-introduction">Introduction</label>
                <textarea id="artisan-introduction" required></textarea>
                <p id="artisan-intro-error" class="teach-error" style="display:none;">⚠️ Please enter an introduction.</p>

                <label for="artisan-file">Upload Portfolio / Proof</label>
                <input type="file" id="artisan-file" class="teach-file-input" accept=".jpg,.jpeg,.png,.pdf,.doc,.docx,.txt" />

                <p id="artisan-error-msg" class="teach-error"></p>

                <button id="artisan-submit-btn" class="teach-modal-btn">Submit Application</button>
            </div>

            <div id="artisan-success" class="teach-verification-message" style="display:none;">
                <h3>Thank You!</h3>
                <p>Your artisan application has been submitted successfully.</p>
                <button class="teach-modal-btn" id="artisan-success-btn">Great</button>
            </div>

            <p class="teach-description">Share your cultural knowledge with the community by becoming a mentor on Tahi.</p>

            <p class="teach-redirect">
                Already have an account?
                <a href="#" onclick="switchToLogin()">Log In</a>
            </p>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // ---------- Global variable for email ----------
        let teachSignupEmail = "";

        // ---------- Initialize Appwrite ----------
        // if (!window.appwriteClient) {
        //     window.appwriteClient = new Appwrite.Client()
        //         .setEndpoint("https:fra.cloud.appwrite.io/v1")
        //         .setProject("689ad4040030d8902c02");
        //     window.appwriteAccount = new Appwrite.Account(window.appwriteClient);
        // }

        // const googleBtn = document.getElementById("btn-google-teach");
        // const facebookBtn = document.getElementById("btn-facebook-teach");
        // const SUCCESS_URL = "https:localhost:7049/oauth/success";

        // ---------- OAuth ----------
        // googleBtn?.addEventListener("click", () => {
        //     window.appwriteAccount.createOAuth2Session("google", SUCCESS_URL, "https:localhost:7049/?error=OAuthFailed", ["openid", "email", "profile"]);
        // });

        // facebookBtn?.addEventListener("click", () => {
        //     window.appwriteAccount.createOAuth2Session("facebook", SUCCESS_URL, "https:localhost:7049/?error=OAuthFailed");
        // });

        // ---------- Modal Open/Close ----------
        function openModal(modalId) {
            document.getElementById("teach-modal-overlay").style.display = "block";
            document.getElementById(modalId).style.display = "block";
            document.addEventListener("keydown", escListener);
        }

        function closeModal(modalId, removeOverlay = false) {
            document.getElementById(modalId).style.display = "none";
            if (removeOverlay) document.getElementById("teach-modal-overlay").style.display = "none";
            document.removeEventListener("keydown", escListener);
        }

        function escListener(e) {
            if (e.key === "Escape") closeModal("teach-modal", true);
        }

        const closeBtn = document.getElementById("teach-close-btn");
        closeBtn?.addEventListener("click", () => closeModal("teach-modal", true));
        
        // ---------- Show/Hide Signup Form ----------
        window.showTeachForm = function() {
            document.querySelector("#teach-form").style.display = "flex";
            document.querySelector(".teach-back-btn").style.display = "flex";
            document.querySelector(".auth-close-btn").style.display = "flex";
            document.querySelector(".social-login").style.display = "none";
            document.querySelector(".teach-email-btn").style.display = "none";
            document.querySelector(".separator").style.display = "none";
        };

        window.hideTeachForm = function() {
            document.querySelector("#teach-form").style.display = "none";
            document.querySelector(".teach-back-btn").style.display = "none";
            document.querySelector(".auth-close-btn").style.display = "none";
            document.querySelector(".social-login").style.display = "flex";
            document.querySelector(".teach-email-btn").style.display = "flex";
            document.querySelector(".separator").style.display = "flex";
        };

        // document.querySelectorAll(".nav-teach-btn").forEach(btn => {
        //     btn.addEventListener("click", e => {
        //         e.preventDefault();
        //         openModal("teach-modal");
        //         Reset visibility
        //         document.querySelector("#teach-form").style.display = "none";
        //         document.querySelector(".teach-verification-message").style.display = "none";
        //         document.querySelector("#artisan-application").style.display = "none";
        //         document.querySelector(".social-login").style.display = "flex";
        //         document.querySelector(".teach-email-btn").style.display = "flex";
        //         document.querySelector(".separator").style.display = "flex";
        //     });
        // });

        document.querySelectorAll(".nav-teach-btn").forEach(btn => {
            btn.addEventListener("click", e => {
                e.preventDefault();
                openModal("teach-modal");

                // Hide all panels
                document.querySelector("#teach-form").style.display = "flex"; // show signup form
                document.querySelector(".teach-back-btn").style.display = "none";
                document.querySelector(".auth-close-btn").style.display = "flex";

                document.querySelector("#teach-verification").style.display = "none"; // hide verification panel
                document.querySelector("#artisan-application").style.display = "none"; // hide application
                document.querySelector("#artisan-success").style.display = "none"; // hide success
            });
        });

        // ---------- Password & Form Validation ----------
        const teachPassword = document.getElementById("teach-password");
        const teachConfirm = document.getElementById("teach-confirm");
        const submitBtn = document.getElementById("teach-submit-btn");
        const passwordChecklist = document.getElementById("teach-password-checklist");

        function updateChecklist(id, valid) {
            const el = document.getElementById(id);
            const base = el.dataset.text || el.textContent.replace(/^✔️|❌/, "").trim();
            el.textContent = (valid ? "✔️ " : "❌ ") + base;
            el.classList.toggle("valid", valid);
        }

        function validatePasswords() {
            const pass = teachPassword.value;
            const confirm = teachConfirm.value;
            passwordChecklist.style.display = pass.length ? "block" : "none";
            updateChecklist("teach-check-length", pass.length >= 8);
            updateChecklist("teach-check-uppercase", /[A-Z]/.test(pass));
            updateChecklist("teach-check-number", /\d/.test(pass));
            updateChecklist("teach-check-symbol", /[^A-Za-z0-9]/.test(pass));
            document.getElementById("teach-confirm-warning").style.display = confirm && pass !== confirm ? "block" : "none";
        }

        function validateTeachFormInputs() {
            const fn = document.getElementById("teach-firstname").value.trim();
            const ln = document.getElementById("teach-lastname").value.trim();
            const email = document.getElementById("teach-email").value.trim();
            const pass = teachPassword.value;
            const confirm = teachConfirm.value;
            const agree = document.getElementById("teach-agree").checked;

            const namePattern = /^[A-Za-zñÑ\s]*$/;
            const emailPattern = new RegExp("^[^\\s]+@@[^\\s]+\\.[^\\s]+$");
            const validEmail = emailPattern.test(email);

            document.getElementById("teach-email-error").style.display = email && !validEmail ? "block" : "none";

            const checklistValid = pass.length >= 8 && /[A-Z]/.test(pass) && /\d/.test(pass) && /[^A-Za-z0-9]/.test(pass);
            submitBtn.disabled = !(fn && ln && validEmail && pass && confirm && pass === confirm && checklistValid && agree && namePattern.test(fn) && namePattern.test(ln));
        }

        ["teach-password","teach-confirm","teach-firstname","teach-lastname","teach-email","teach-agree"].forEach(id => {
            const el = document.getElementById(id);
            el?.addEventListener("input", () => { validatePasswords(); validateTeachFormInputs(); });
            el?.addEventListener("change", validateTeachFormInputs);
        });

        // Name validation
        function validateTeachNameInput(inputId, errorId) {
            const input = document.getElementById(inputId);
            const error = document.getElementById(errorId);
            input.addEventListener("input", () => {
                const valid = /^[A-Za-zñÑ\s]*$/.test(input.value);
                error.style.display = input.value && !valid ? "block" : "none";
            });
        }

        validateTeachNameInput("teach-firstname", "teach-fn-error");
        validateTeachNameInput("teach-lastname", "teach-ln-error");

        // ---------- Signup Form Submission ----------
        async function submitTeachForm(e) {
            e.preventDefault();
            const error = document.getElementById("teach-error-msg");
            error.textContent = "";
            submitBtn.disabled = true;
            submitBtn.textContent = "Submitting...";

            const data = {
                FirstName: document.getElementById("teach-firstname").value.trim(),
                LastName: document.getElementById("teach-lastname").value.trim(),
                Email: document.getElementById("teach-email").value.trim(),
                Password: teachPassword.value,
                ConfirmPassword: teachConfirm.value,
                Role: "Artisan"
            };

            if (data.Password !== data.ConfirmPassword) {
                error.textContent = "⚠️ Passwords do not match.";
                submitBtn.disabled = false;
                submitBtn.textContent = "Create Instructor Account";
                return;
            }

            // Show artisan form immediately
            teachSignupEmail = data.Email; // store email
            document.getElementById("teach-form").style.display = "none";
            document.getElementById("artisan-application").style.display = "flex";
            document.querySelector(".teach-description").style.display = "none";
            document.querySelector(".teach-redirect").style.display = "none";
            document.querySelector(".auth-close-btn").style.display = "none";

            // Send signup request asynchronously, without blocking UI
            try {
                const response = await fetch("/signup-artisan", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(data)
                });
                const result = await response.json().catch(() => ({ message: "Unexpected response" }));

                if (!response.ok) {
                    // show error inside artisan form
                    artisanErrorMsg.textContent = result.message || "Signup failed.";
                }
            } catch (err) {
                console.error(err);
                artisanErrorMsg.textContent = "An error occurred. Please try again.";
            }

            submitBtn.disabled = false;
            submitBtn.textContent = "Create Instructor Account";
        }

        document.getElementById("teach-form").addEventListener("submit", submitTeachForm);

        // ---------- Skip Verification ----------
        window.handleTeachSkipVerification = function() {
            // Hide the verification panel
            document.getElementById("teach-verification").style.display = "none";

            // Optionally, show a success message instead of reopening the application
            const successPanel = document.getElementById("artisan-success");
            if (successPanel) {
                successPanel.style.display = "flex";
                document.getElementById("artisan-success-btn").onclick = () => {
                    closeModal("teach-modal", true);
                    window.location.reload();
                };
            }
        };

        // ---------- Artisan Application ----------
        const artisanSubmitBtn = document.getElementById("artisan-submit-btn");
        const artisanErrorMsg = document.getElementById("artisan-error-msg");
        const artisanProfession = document.getElementById("artisan-profession");
        const artisanHometown = document.getElementById("artisan-hometown");
        const artisanIntroduction = document.getElementById("artisan-introduction");
        const artisanFile = document.getElementById("artisan-file");
        const artisanProfessionSelect = document.getElementById("artisan-profession");
        const artisanOtherWrapper = document.getElementById("artisan-other-profession-wrapper");
        const artisanOtherInput = document.getElementById("artisan-other-profession");

        const MAX_FILE_SIZE = 10 * 1024 * 1024; // 10 MB
        const ALLOWED_FILE_TYPES = [".pdf", ".doc", ".docx"];

        artisanProfessionSelect.addEventListener("change", () => {
            if (artisanProfessionSelect.value === "Others") {
                artisanOtherWrapper.style.display = "block";
            } else {
                artisanOtherWrapper.style.display = "none";
                artisanOtherInput.value = ""; // reset
            }
        });

        function validateArtisanFile() {
            artisanErrorMsg.textContent = ""; // reset
            const file = artisanFile.files[0];
            if (!file) {
                artisanErrorMsg.textContent = "⚠️ Please upload a file.";
                artisanSubmitBtn.disabled = true;
                return false;
            }

            const ext = file.name.toLowerCase().substring(file.name.lastIndexOf("."));
            if (!ALLOWED_FILE_TYPES.includes(ext)) {
                artisanErrorMsg.textContent = `⚠️ Invalid file type. Only ${ALLOWED_FILE_TYPES.join(", ")} allowed.`;
                artisanSubmitBtn.disabled = true;
                return false;
            }

            if (file.size > MAX_FILE_SIZE) {
                artisanErrorMsg.textContent = `⚠️ File too large. Maximum size is ${MAX_FILE_SIZE / (1024 * 1024)} MB.`;
                artisanSubmitBtn.disabled = true;
                return false;
            }

            artisanErrorMsg.textContent = "";
            return true;
        }

        function validateArtisanForm() {
            const professionValue = artisanProfession.value.trim() === "Others" ? artisanOtherInput.value.trim() : artisanProfession.value.trim();
            const validProfession = professionValue.length > 0;
            const validHometown = artisanHometown.value.trim().length > 0;
            const validIntro = artisanIntroduction.value.trim().length > 0;
            const validFile = validateArtisanFile();

            const validForm = validProfession && validHometown && validIntro && validFile;
            artisanSubmitBtn.disabled = !validForm;

            if (!validProfession && artisanProfession.value === "Others") {
                document.getElementById("artisan-other-profession-error").style.display = "block";
            } else {
                document.getElementById("artisan-other-profession-error").style.display = "none";
            }
        }

        // Listen to file selection and other inputs
        [artisanFile, artisanProfession, artisanHometown, artisanIntroduction, artisanOtherInput].forEach(el => {
            el.addEventListener("input", validateArtisanForm);
            el.addEventListener("change", validateArtisanForm);
        });

        // Initial disable
        artisanSubmitBtn.disabled = true;

        artisanSubmitBtn.addEventListener("click", async () => {
            artisanSubmitBtn.disabled = true;
            artisanSubmitBtn.textContent = "Submitting...";

            if (!artisanProfession.value.trim() ||
                !artisanHometown.value.trim() ||
                !artisanIntroduction.value.trim() ||
                !artisanFile.files.length) {
                artisanErrorMsg.textContent = "⚠️ Please fill in all required fields.";
                return;
            }

            const formData = new FormData();
            formData.append("file", artisanFile.files[0]);

            const selectedProfession = artisanProfession.value.trim();
            const finalProfession = selectedProfession === "Others"
                ? artisanOtherInput.value.trim()
                : selectedProfession;
            formData.append("profession", finalProfession);

            formData.append("hometown", artisanHometown.value.trim());
            formData.append("introduction", artisanIntroduction.value.trim());

            try {
                const response = await fetch("/submit-artisan-application", {
                    method: "POST",
                    body: formData
                });
                const result = await response.json();
                if (response.ok) {
                    try {
                        await fetch("/send-verification", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify(teachSignupEmail) // use global email
                        });

                        // Hide application form and show verification panel
                        document.getElementById("artisan-application").style.display = "none";
                        const verificationPanel = document.getElementById("teach-verification");
                        verificationPanel.style.display = "flex";
                        document.getElementById("teach-ob-email").textContent = teachSignupEmail;

                    } catch (err) {
                        console.error("Failed to send verification email:", err);
                        artisanErrorMsg.textContent = "Your application was submitted, but email verification failed. Please try resending later.";
                    }

                    // Handle the "Great" button
                    document.getElementById("artisan-success-btn").onclick = () => {
                        closeModal("teach-modal", true);
                        window.location.reload();
                    };
                } else {
                    artisanErrorMsg.textContent = result.message || "Submission failed.";
                }
            } catch (err) {
                console.error(err);
                artisanErrorMsg.textContent = "An error occurred. Please try again.";
            }
        });

        // ---------- Toggle Password Visibility ----------
        window.togglePasswordVisibility = function(inputId, icon) {
            const input = document.getElementById(inputId);
            if (!input) return;
            input.type = input.type === "password" ? "text" : "password";
            icon.textContent = input.type === "text" ? "👁️" : "👁️‍🗨️";
        };
    });
</script>